#include("../src/use-chipper.stanza")
#include("../src/use-tester.stanza")
#include("../chipper/src/stdlib.stanza")

#use-syntax(core, chipper)

defpackage accumulator :
   import core
   import verse
   import chipper
   import tester
   import stdlib

defmodule MaxN (n:Int, w:Int) :
  input ins : UInt<w>[n]
  output out : UInt<w>
  defn Max2 (x:UInt, y:UInt) :
    mux(x > y, x, y)
  out := reduce(Max2, ins)

defn max-n-tests (n:Int, w:Int) :
  with-tester [t, c] = MaxN(n,w) :
    ;; FLUSH OUT
    for i in 0 to 16 all? :
      for j in 0 to n do :
        poke(t, c.ins[0], 0)
      step(t)
      expect(t, c.out, 1)

defn main (args) :
   val [n,w] = [8,16]
   if length(args) > 1 and args[1] == "--testing" :
     max-n-tests(n,w)
   else :
     circuit c : MaxN(n,w)
     println(c)
   
main(commandline-arguments())
